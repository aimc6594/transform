diff --git a/node_modules/htmltojsx/src/htmltojsx.js b/node_modules/htmltojsx/src/htmltojsx.js
index afe4c85..f59564c 100644
--- a/node_modules/htmltojsx/src/htmltojsx.js
+++ b/node_modules/htmltojsx/src/htmltojsx.js
@@ -326,18 +326,10 @@ HTMLtoJSX.prototype = {
   convert: function(html) {
     this.reset();
 
-    var containerEl = createElement('div');
+    var containerEl = createElement('null');
     containerEl.innerHTML = '\n' + this._cleanInput(html) + '\n';
 
-    if (this.config.createClass) {
-      if (this.config.outputClassName) {
-        this.output = 'var ' + this.config.outputClassName + ' = React.createClass({\n';
-      } else {
-        this.output = 'React.createClass({\n';
-      }
-      this.output += this.config.indent + 'render: function() {' + "\n";
-      this.output += this.config.indent + this.config.indent + 'return (\n';
-    }
+    let wrap = false
 
     if (this._onlyOneTopLevel(containerEl)) {
       // Only one top-level element, the component can return it directly
@@ -347,17 +339,19 @@ HTMLtoJSX.prototype = {
       // More than one top-level element, need to wrap the whole thing in a
       // container.
       this.output += this.config.indent + this.config.indent + this.config.indent;
+      wrap = true
       this.level++;
       this._visit(containerEl);
     }
     this.output = this.output.trim() + '\n';
-    if (this.config.createClass) {
-      this.output += this.config.indent + this.config.indent + ');\n';
-      this.output += this.config.indent + '}\n';
-      this.output += '});';
-    } else {
-      this.output = this._removeJSXClassIndention(this.output, this.config.indent);
+    this.output = this._removeJSXClassIndention(this.output, this.config.indent);
+
+    if (this.output.startsWith("{") || this.output.endsWith("}")) {
+      this.output = `<>${this.output}</>`
+    } else if (wrap) {
+      this.output.replace("<null>", "<>").replace("</null>", "</>")
     }
+
     return this.output;
   },
 
