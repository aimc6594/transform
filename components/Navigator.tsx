import React, { useCallback, Fragment } from "react";
import { Heading, Pane, Text, Autocomplete, SearchInput } from "evergreen-ui";
import { categorizedRoutes, Route, routes } from "@utils/routes";
import Link from "next/link";
import { useRouter } from "next/router";

const logo = (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="304px"
    height="51px"
    viewBox="0 0 304 51"
  >
    <path
      fill="#666"
      fillRule="nonzero"
      stroke="none"
      strokeWidth={1}
      d="M210.419 51.328l.527 11.18h-1.336c-.258-1.969-.61-3.375-1.055-4.219-.726-1.36-1.693-2.361-2.9-3.006-1.207-.644-2.795-.967-4.764-.967h-6.715v36.422c0 2.93.317 4.758.95 5.485.89.984 2.261 1.476 4.113 1.476h1.652V99h-20.215v-1.3h1.688c2.016 0 3.445-.61 4.289-1.829.516-.75.773-2.46.773-5.133V54.316h-5.73c-2.227 0-3.809.164-4.746.493-1.219.445-2.262 1.3-3.129 2.566-.867 1.266-1.383 2.977-1.547 5.133h-1.336l.563-11.18h38.918zm11.919 14.52v7.242c2.695-4.828 5.46-7.242 8.297-7.242 1.289 0 2.355.392 3.199 1.177.844.786 1.265 1.694 1.265 2.725 0 .914-.304 1.687-.914 2.32-.609.633-1.336.95-2.18.95-.82 0-1.74-.405-2.759-1.213-1.02-.809-1.775-1.213-2.268-1.213-.421 0-.879.234-1.37.703-1.055.96-2.145 2.543-3.27 4.746v15.434c0 1.78.222 3.128.668 4.043.304.632.843 1.16 1.617 1.582.773.421 1.887.632 3.34.632V99h-16.489v-1.266c1.641 0 2.86-.257 3.657-.773.586-.375.996-.973 1.23-1.793.117-.398.176-1.535.176-3.41v-12.48c0-3.75-.076-5.983-.229-6.698-.152-.715-.433-1.236-.843-1.564-.41-.329-.92-.493-1.53-.493-.726 0-1.546.176-2.46.528l-.352-1.266 9.738-3.937h1.477zm33.259 28.511c-3.305 2.555-5.38 4.032-6.223 4.43a9.507 9.507 0 01-4.043.879c-2.226 0-4.06-.762-5.502-2.285-1.441-1.524-2.162-3.528-2.162-6.012 0-1.57.352-2.93 1.055-4.078.96-1.594 2.63-3.094 5.01-4.5 2.378-1.406 6.333-3.117 11.865-5.133v-1.265c0-3.211-.51-5.415-1.53-6.61-1.02-1.195-2.502-1.793-4.447-1.793-1.476 0-2.648.399-3.515 1.195-.891.797-1.336 1.711-1.336 2.743l.07 2.039c0 1.078-.275 1.91-.826 2.496-.551.586-1.272.879-2.162.879-.868 0-1.577-.305-2.127-.914-.551-.61-.826-1.442-.826-2.496 0-2.016 1.03-3.868 3.093-5.555 2.063-1.688 4.957-2.531 8.684-2.531 2.86 0 5.203.48 7.031 1.441 1.383.727 2.402 1.863 3.059 3.41.422 1.008.633 3.07.633 6.188V87.82c0 3.07.058 4.951.175 5.643.117.691.31 1.154.58 1.389.27.234.58.351.932.351.375 0 .703-.082.984-.246.493-.305 1.442-1.16 2.848-2.566v1.968c-2.625 3.516-5.133 5.274-7.523 5.274-1.149 0-2.063-.399-2.743-1.195-.68-.797-1.03-2.157-1.054-4.079zm0-2.285v-12.27c-3.54 1.407-5.824 2.403-6.856 2.989-1.851 1.031-3.176 2.11-3.972 3.234-.797 1.125-1.196 2.356-1.196 3.692 0 1.687.504 3.088 1.512 4.2 1.008 1.114 2.168 1.67 3.48 1.67 1.782 0 4.125-1.171 7.032-3.515zm23.556-19.406c3.773-4.547 7.37-6.82 10.793-6.82 1.757 0 3.27.44 4.535 1.318 1.265.879 2.273 2.326 3.023 4.342.516 1.406.774 3.562.774 6.469v13.746c0 2.039.164 3.422.492 4.148a2.888 2.888 0 001.248 1.371c.574.328 1.635.492 3.181.492V99h-15.925v-1.266h.668c1.5 0 2.548-.228 3.146-.685.598-.457 1.014-1.131 1.248-2.022.094-.351.14-1.453.14-3.304V78.539c0-2.93-.38-5.057-1.142-6.38-.762-1.325-2.045-1.987-3.85-1.987-2.788 0-5.566 1.523-8.331 4.57v16.98c0 2.18.128 3.528.386 4.044.328.68.78 1.177 1.354 1.494.574.316 1.74.474 3.498.474V99h-15.926v-1.266h.703c1.64 0 2.748-.416 3.322-1.248.575-.832.862-2.42.862-4.763V79.77c0-3.868-.088-6.223-.264-7.067-.176-.844-.445-1.418-.808-1.723-.364-.304-.85-.457-1.46-.457-.656 0-1.44.176-2.355.528l-.527-1.266 9.703-3.937h1.512v6.82zm47.884-6.82v10.968h-1.16c-.891-3.445-2.034-5.789-3.428-7.03-1.395-1.243-3.17-1.864-5.327-1.864-1.64 0-2.964.433-3.972 1.3-1.008.868-1.512 1.829-1.512 2.883 0 1.313.375 2.438 1.125 3.375.727.961 2.203 1.98 4.43 3.06l5.133 2.495c4.757 2.32 7.136 5.379 7.136 9.176 0 2.93-1.107 5.29-3.322 7.084-2.215 1.793-4.693 2.69-7.435 2.69-1.97 0-4.22-.352-6.75-1.055-.774-.235-1.407-.352-1.899-.352-.539 0-.96.305-1.266.914h-1.16V87.996h1.16c.657 3.281 1.91 5.754 3.762 7.418 1.852 1.664 3.926 2.496 6.223 2.496 1.617 0 2.935-.474 3.955-1.424 1.02-.949 1.53-2.091 1.53-3.427 0-1.618-.57-2.977-1.706-4.079-1.137-1.101-3.404-2.496-6.803-4.183-3.398-1.688-5.625-3.211-6.68-4.57-1.054-1.336-1.581-3.024-1.581-5.063 0-2.648.908-4.863 2.724-6.644 1.817-1.782 4.166-2.672 7.05-2.672 1.265 0 2.8.27 4.605.808 1.195.352 1.992.528 2.39.528.375 0 .668-.082.88-.246.21-.165.456-.528.737-1.09h1.16zm20.25 3.48v21.164c0 3 .329 4.899.985 5.695.867 1.032 2.027 1.547 3.48 1.547h2.918V99h-19.23v-1.266h1.441c.938 0 1.793-.234 2.567-.703.773-.469 1.306-1.101 1.6-1.898.292-.797.439-2.344.439-4.64V69.327h-6.258v-2.531h6.258v-2.11c0-3.21.516-5.93 1.547-8.156 1.031-2.226 2.607-4.025 4.728-5.396 2.121-1.371 4.506-2.057 7.155-2.057 2.46 0 4.722.797 6.785 2.39 1.36 1.055 2.039 2.239 2.039 3.552 0 .703-.305 1.365-.914 1.986-.61.621-1.266.931-1.969.931-.54 0-1.107-.193-1.705-.58-.598-.386-1.33-1.218-2.197-2.496-.868-1.277-1.664-2.138-2.391-2.584a4.55 4.55 0 00-2.426-.668c-1.078 0-1.992.287-2.742.862-.75.574-1.289 1.465-1.617 2.672-.328 1.207-.492 4.318-.492 9.334v2.32h8.297v2.531h-8.297zm27.6-3.48c4.875 0 8.789 1.851 11.742 5.554 2.508 3.164 3.761 6.797 3.761 10.899 0 2.883-.691 5.8-2.074 8.754-1.383 2.953-3.287 5.18-5.713 6.68s-5.127 2.25-8.103 2.25c-4.852 0-8.707-1.934-11.567-5.801-2.414-3.258-3.62-6.914-3.62-10.97 0-2.952.732-5.888 2.197-8.806 1.464-2.918 3.392-5.074 5.783-6.469 2.39-1.394 4.922-2.091 7.593-2.091zm-1.09 2.285c-1.243 0-2.49.369-3.744 1.107-1.254.739-2.268 2.033-3.042 3.885-.773 1.852-1.16 4.23-1.16 7.137 0 4.687.932 8.73 2.795 12.129 1.864 3.398 4.319 5.097 7.365 5.097 2.274 0 4.149-.937 5.625-2.812 1.477-1.875 2.215-5.098 2.215-9.668 0-5.719-1.23-10.219-3.691-13.5-1.664-2.25-3.785-3.375-6.363-3.375zm31.22-2.285v7.242c2.695-4.828 5.46-7.242 8.296-7.242 1.29 0 2.356.392 3.2 1.177.843.786 1.265 1.694 1.265 2.725 0 .914-.304 1.687-.914 2.32-.61.633-1.336.95-2.18.95-.82 0-1.74-.405-2.76-1.213-1.019-.809-1.775-1.213-2.267-1.213-.422 0-.879.234-1.37.703-1.056.96-2.145 2.543-3.27 4.746v15.434c0 1.78.222 3.128.668 4.043.304.632.843 1.16 1.617 1.582.773.421 1.886.632 3.34.632V99h-16.489v-1.266c1.64 0 2.86-.257 3.657-.773.585-.375.996-.973 1.23-1.793.117-.398.176-1.535.176-3.41v-12.48c0-3.75-.076-5.983-.229-6.698-.152-.715-.433-1.236-.843-1.564-.41-.329-.92-.493-1.53-.493-.726 0-1.547.176-2.46.528l-.352-1.266 9.738-3.937h1.477zm24.575 6.855c2.344-2.344 3.726-3.691 4.148-4.043a12.553 12.553 0 013.41-2.074c1.22-.492 2.426-.738 3.622-.738 2.015 0 3.75.586 5.203 1.757 1.453 1.172 2.426 2.872 2.918 5.098 2.414-2.812 4.453-4.658 6.117-5.537 1.664-.879 3.375-1.318 5.133-1.318 1.71 0 3.228.44 4.552 1.318 1.325.879 2.373 2.314 3.147 4.307.516 1.359.773 3.492.773 6.398v13.852c0 2.015.153 3.398.457 4.148.235.516.668.955 1.301 1.318.633.364 1.664.545 3.094.545V99h-15.89v-1.266h.667c1.383 0 2.461-.27 3.235-.808.539-.375.925-.973 1.16-1.793.094-.399.14-1.535.14-3.41V77.87c0-2.625-.316-4.476-.949-5.555-.914-1.5-2.379-2.25-4.394-2.25-1.243 0-2.49.31-3.744.932-1.254.621-2.772 1.775-4.553 3.463l-.07.387.07 1.511v15.364c0 2.203.123 3.574.369 4.113.246.539.709.99 1.389 1.353.68.364 1.84.545 3.48.545V99H438.1v-1.266c1.781 0 3.006-.21 3.674-.632.668-.422 1.13-1.055 1.388-1.899.117-.398.176-1.558.176-3.48V77.87c0-2.625-.387-4.512-1.16-5.66-1.031-1.5-2.473-2.25-4.324-2.25-1.266 0-2.52.34-3.762 1.02-1.945 1.03-3.445 2.19-4.5 3.48v17.262c0 2.109.146 3.48.44 4.113.292.633.726 1.107 1.3 1.424.574.316 1.74.474 3.498.474V99h-15.926v-1.266c1.477 0 2.508-.158 3.094-.474.586-.317 1.031-.82 1.336-1.512.305-.691.457-2.033.457-4.025V79.418c0-3.54-.105-5.824-.316-6.856-.164-.773-.422-1.306-.774-1.6-.351-.292-.832-.439-1.441-.439-.656 0-1.442.176-2.356.528l-.527-1.266 9.703-3.937h1.512v6.855z"
      transform="translate(-170 -49)"
    />
  </svg>
);

export default function() {
  const router = useRouter();

  const onSearchSelect = useCallback(changedItem => {
    const route = routes.find(route => changedItem === route.searchTerm);
    router.push(route.path);
  }, []);

  return (
    <Pane
      width={240}
      height={"100vh"}
      borderRight
      display="flex"
      flexDirection="column"
    >
      <Pane
        display="flex"
        alignItems="center"
        justifyContent="center"
        paddingX={20}
        paddingY={20}
      >
        {logo}
      </Pane>

      <Pane paddingX={15}>
        <Autocomplete
          onChange={onSearchSelect}
          items={routes.map(a => a.searchTerm)}
          width="100%"
        >
          {props => {
            const { getInputProps, getRef, inputValue } = props;
            return (
              <SearchInput
                width="100%"
                marginBottom={10}
                placeholder="Search"
                value={inputValue}
                innerRef={getRef}
                {...getInputProps()}
              />
            );
          }}
        </Autocomplete>
      </Pane>

      <Pane
        display="flex"
        flex={1}
        overflowY="scroll"
        flexDirection="column"
        paddingBottom={10}
      >
        {categorizedRoutes.map(route => {
          return (
            <Fragment key={route.category}>
              <Pane paddingX={10} marginTop={15} marginBottom={2}>
                <Heading marginLeft={5} size={400}>
                  {route.category}
                </Heading>
              </Pane>

              {(route.content as Route[]).map((a: Route) => {
                const isActive = router.pathname === a.path;
                return (
                  <Link key={a.label} href={a.path} prefetch>
                    <a
                      style={{
                        textDecoration: "none"
                      }}
                    >
                      <Pane
                        paddingLeft={16}
                        paddingY={3}
                        backgroundColor={isActive ? "#f3f3f3" : undefined}
                        borderLeft={
                          isActive
                            ? "3px solid #009688"
                            : "3px solid transparent"
                        }
                        css={{
                          "&:hover": {
                            backgroundColor: "#f5f5f5"
                          }
                        }}
                      >
                        <Text fontSize={13}>{a.label}</Text>
                      </Pane>
                    </a>
                  </Link>
                );
              })}
            </Fragment>
          );
        })}
      </Pane>

      <Pane paddingY={15} background="#f6f6f6" borderTop>
        <Heading size={400} textAlign="center">
          Created by{" "}
          <Link href="https://twitter.com/ritz078">
            <a target="_blank">@ritz078</a>
          </Link>
        </Heading>
      </Pane>
    </Pane>
  );
}
